<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wayne.system.mapper.SysDictDataMapper">

    <resultMap id="SysDictDataMap" type="SysDictData">
        <id column="data_id" property="dataId"></id>
        <result column="data_label" property="dataLabel"></result>
        <result column="data_value" property="dataValue"></result>
        <result column="type_code" property="typeCode"></result>
        <result column="is_default" property="isDefault"></result>
        <result column="enable" property="enable"></result>
        <result column="update_by" property="updateBy"></result>
        <result column="update_time" property="updateTime"></result>
        <result column="create_by" property="createBy"></result>
        <result column="create_time" property="createTime"></result>
        <result column="remark" property="remark"></result>
    </resultMap>

    <select id="selectByCode"  resultMap="SysDictDataMap">
       select * from sys_dict_data s
       where s.type_code = #{typeCode}
       order by s.data_value asc
    </select>
    <delete id="deleteByCode">
        delete from sys_dict_data where type_code = #{typeCode}
    </delete>
    <select id="queryTableDictItemsByCode" parameterType="string" resultMap="SysDictDataMap">
         select ${text} as "data_label", ${code} as "data_value" from ${table}
    </select>

    <select id="queryTableDictItemsByCodeAndFilter" resultMap="SysDictDataMap">
         select ${text} as "data_label", ${code} as "data_value" from ${table}
        <if test="filterSql != null and filterSql != ''">
            where ${filterSql}
        </if>
    </select>

    <select id="queryTableDictByKeys" resultMap="SysDictDataMap">
         select ${text} as "data_label", ${code} as "data_value" from ${table} where ${code} in
        <foreach item="key" collection="keyArray" open="(" separator="," close=")">
            #{key}
        </foreach>
    </select>
</mapper>